{"version":3,"file":"static/js/782.685c4827.chunk.js","mappings":"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","sources":["api.js","components/SearchedListMovies/SearchedListMovies.styled.js","components/SearchedListMovies/SearchedListMovies.jsx","components/SearchForm/SearchedForm.styled.js","components/SearchForm/SearchedForm.jsx","pages/Movie/Movie.js"],"sourcesContent":["import axios from \"axios\";\n\nconst BASIC_URL = 'https://api.themoviedb.org/';\nconst API_KEY = '1a30358632b0edf3e9bcfce3a729c959';\n\nconst trending = '3/trending/movie/day';\nconst search = '3/search/movie';\nconst movieDetails = '3/movie/';\n\n\nexport const apiTrending = async () => {\n    const response = await axios.get(`${BASIC_URL + trending}?api_key=${API_KEY}`);\n    return response.data.results;\n\n};\n\nexport const apiSearch = async (query) => {\n    const response = await axios.get(`${BASIC_URL + search}?api_key=${API_KEY}&query=${query}`);\n    return response.data.results;\n\n};\n\nexport const apiMovieDetails = async (movieId) => {\n    const response = await axios.get(`${BASIC_URL + movieDetails + movieId}?api_key=${API_KEY}`);\n    return response.data;\n\n};\n\nexport const apiMovieCredits = async (movieId) => {\n    const response = await axios.get(`${BASIC_URL + movieDetails + movieId}/credits?api_key=${API_KEY}`);\n    return response.data.cast;\n\n};\n\nexport const apiMovieReviews = async (movieId) => {\n    const response = await axios.get(`${BASIC_URL + movieDetails + movieId}/reviews?api_key=${API_KEY}`);\n    return response.data.results;\n\n};\n\n\n\n\n\n","import styled from \"styled-components\";\n\nexport const MoviesList = styled.ul`\ndisplay: flex;\ngap: 20px;\nflex-wrap: wrap;\n\n\n`\n\nexport const MovieItem = styled.li`\n/* max-width: 200px; */\n`\n\nexport const MovieCardWrapper = styled.div`\ndisplay: flex;\nflex-direction: column;\nwidth: 264px;\n`\n\nexport const MovieImageWrapper = styled.div`\nwidth: 264px;\nborder-radius: 8px;\njustify-content: center;\nalign-items: center;\nmargin-bottom: 14px;\ndisplay: flex;\noverflow: hidden;\n\n\n`\n\nexport const MovieImage = styled.img`\n\nobject-fit: cover;\nmax-width: 100%;\nheight: 300px;\n\n`\n\nexport const MovieTitle = styled.p`\ntext-decoration: none;\n    font-size: 16px;\n    margin-top: 12px;\n    color: rgb(17, 17, 17);\n    font-weight: 500;\n    text-align: center;\n\n\n`","import { NavLink } from \"react-router-dom\";\nimport { MovieCardWrapper, MoviesList, MovieImageWrapper, MovieImage, MovieTitle, MovieItem} from \"./SearchedListMovies.styled\";\n\n\n\nexport const SearchedListMovies = ({ searchMovie, location }) => {\n    \n    const defaultImg = 'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\n    return <div>\n        {searchMovie && searchMovie.length > 0 ?\n     \n            <MoviesList>\n                {searchMovie.map(({ title, id, backdrop_path }) => (\n                    <MovieItem key={id}>\n                        <NavLink to={`${id}`} state={{ from: location }}>\n                            <MovieCardWrapper>\n                                <MovieImageWrapper>\n                                    {<MovieImage src={backdrop_path ? (`https://image.tmdb.org/t/p/w400${backdrop_path}`) : defaultImg} alt={title}>\n                                    </MovieImage>}\n                                </MovieImageWrapper>\n\n                                <MovieTitle>\n                                    {title}\n                                </MovieTitle>\n\n                            </MovieCardWrapper>\n                        </NavLink>\n                    </MovieItem>))}\n            </MoviesList>\n\n\n\n            : <div> Нічого не знайдено   </div>}\n    </div>\n}\n","import styled from \"styled-components\";\n\nexport const StyledForm = styled.form`\n   \n    display: flex;\n    gap: 24px;\n    margin-bottom: 30px;\n`\n\nexport const StyledInput = styled.input`\n    height: 45px;\n    width: 380px;\n    font-size: 18px;\n    font-weight: 500;\n    padding-left: 12px;\n    border: 1.5px solid gray;\n    border-radius: 8px;\n`\n\nexport const StyledButton = styled.button`\n    width: 184px;\n    background-color: lightgray;\n    border: 1.5px solid gray;\n    border-radius: 8px;\n    font-size: 18px;\n    font-weight: 500;\n    cursor: pointer;\n    \n\n`","import { StyledForm, StyledInput, StyledButton } from \"./SearchedForm.styled\"\n\nexport const SearchForm = ({handleSubmit, query}) => {\n\n  return <>\n  <StyledForm onSubmit={handleSubmit}>\n        <StyledInput type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Який фільм будемо шукати?\"\n            name=\"query\"\n            defaultValue={query} \n                />\n      \n        <StyledButton type=\"submit\">Шукати</StyledButton>\n    </StyledForm>\n  </>\n}\n","import { useState, useEffect } from \"react\";\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { apiSearch } from \"api\";\nimport { SearchedListMovies } from \"components/SearchedListMovies/SearchedListMovies\";\nimport { SearchForm } from \"components/SearchForm/SearchedForm\";\n\n\nexport default function Movie() {\n  // const [isLoading, setIsLoading] = useState(false);\n  const [searchMovie, setSearchMovie] = useState([]);\n  const [params, setParams] = useSearchParams();\n  const query = params.get('query') ?? '';\n  const location = useLocation();\n  \n//   const { movieId } = useParams();\n\n//   useEffect(() => {\n// if (!movieId) return;\n// }, [movieId]);\n  \n  useEffect(() => {\n   if (query === '') {\n      return;\n    }\n    \n    const getSearchedMovies = async () => {\n        try {\n        const movies = await apiSearch(query);\n            if (movies && movies.length !== 0)\n            {\n                setSearchMovie(movies);\n          }\n          // if (movies.length === 0) {\n          //   setSearchMovie(null);\n          //   return;\n          // }  \n          // setSearchMovie(movies);\n            \n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    \n      getSearchedMovies();\n    \n }, [query]);\n  \n  \n  const handleSubmit = event => { \n    event.preventDefault();\n    const value = event.target.elements.query.value.trim();\n    params.set('query', value);\n    setParams(params);\n    console.log(searchMovie);\n    \n\n  }\n  \n    \nreturn <>\n  <SearchForm handleSubmit={handleSubmit} query={ query} />\n    {searchMovie && searchMovie.length > 0  && (\n    <SearchedListMovies searchMovie={searchMovie} location={location} />) }\n  \n  \n  </>\n}\n  \n"],"names":["BASIC_URL","API_KEY","movieDetails","apiTrending","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","concat","sent","abrupt","data","results","stop","apply","arguments","apiSearch","_ref2","_callee2","query","_context2","_x","apiMovieDetails","_ref3","_callee3","movieId","_context3","_x2","apiMovieCredits","_ref4","_callee4","_context4","cast","_x3","apiMovieReviews","_ref5","_callee5","_context5","_x4","MoviesList","styled","_templateObject","_taggedTemplateLiteral","MovieItem","_templateObject2","MovieCardWrapper","_templateObject3","MovieImageWrapper","_templateObject4","MovieImage","_templateObject5","MovieTitle","_templateObject6","SearchedListMovies","searchMovie","location","_jsx","children","length","map","title","id","backdrop_path","NavLink","to","state","from","_jsxs","src","alt","StyledForm","StyledInput","StyledButton","SearchForm","handleSubmit","_Fragment","onSubmit","type","autoComplete","autoFocus","placeholder","name","defaultValue","Movie","_params$get","_useState","useState","_useState2","_slicedToArray","setSearchMovie","_useSearchParams","useSearchParams","_useSearchParams2","params","setParams","get","useLocation","useEffect","getSearchedMovies","movies","t0","console","log","event","preventDefault","value","target","elements","trim","set"],"sourceRoot":""}